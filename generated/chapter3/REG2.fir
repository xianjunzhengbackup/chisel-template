circuit REG2 :
  module REG2 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip a : UInt<8>, flip en : UInt<1>, c : UInt<1>}

    wire _reg0_WIRE : UInt<8>[2] @[chapter3_模块与硬件类型.scala 393:33]
    _reg0_WIRE[0] <= io.a @[chapter3_模块与硬件类型.scala 393:33]
    _reg0_WIRE[1] <= io.a @[chapter3_模块与硬件类型.scala 393:33]
    reg reg0 : UInt<8>[2], clock with :
      reset => (UInt<1>("h0"), reg0) @[chapter3_模块与硬件类型.scala 393:25]
    reg0[0] <= _reg0_WIRE[0] @[chapter3_模块与硬件类型.scala 393:25]
    reg0[1] <= _reg0_WIRE[1] @[chapter3_模块与硬件类型.scala 393:25]
    wire _reg1_WIRE : UInt<8>[2] @[chapter3_模块与硬件类型.scala 394:33]
    _reg1_WIRE[0] <= io.a @[chapter3_模块与硬件类型.scala 394:33]
    _reg1_WIRE[1] <= io.a @[chapter3_模块与硬件类型.scala 394:33]
    wire _reg1_WIRE_1 : UInt<1>[2] @[chapter3_模块与硬件类型.scala 394:54]
    _reg1_WIRE_1[0] <= UInt<1>("h0") @[chapter3_模块与硬件类型.scala 394:54]
    _reg1_WIRE_1[1] <= UInt<1>("h0") @[chapter3_模块与硬件类型.scala 394:54]
    reg reg1 : UInt<8>[2], clock with :
      reset => (reset, _reg1_WIRE_1) @[chapter3_模块与硬件类型.scala 394:25]
    reg1[0] <= _reg1_WIRE[0] @[chapter3_模块与硬件类型.scala 394:25]
    reg1[1] <= _reg1_WIRE[1] @[chapter3_模块与硬件类型.scala 394:25]
    wire _reg2_WIRE : UInt<8>[2] @[chapter3_模块与硬件类型.scala 395:33]
    _reg2_WIRE[0] <= UInt<8>("h0") @[chapter3_模块与硬件类型.scala 395:33]
    _reg2_WIRE[1] <= UInt<8>("h0") @[chapter3_模块与硬件类型.scala 395:33]
    reg reg2 : UInt<8>[2], clock with :
      reset => (reset, _reg2_WIRE) @[chapter3_模块与硬件类型.scala 395:25]
    reg reg3 : UInt<8>[2], clock with :
      reset => (UInt<1>("h0"), reg3) @[chapter3_模块与硬件类型.scala 396:21]
    reg reg4 : UInt<8>[2], clock with :
      reset => (UInt<1>("h0"), reg4) @[chapter3_模块与硬件类型.scala 397:21]
    node _reg5_T = add(io.a, UInt<1>("h1")) @[chapter3_模块与硬件类型.scala 398:41]
    node _reg5_T_1 = tail(_reg5_T, 1) @[chapter3_模块与硬件类型.scala 398:41]
    node _reg5_T_2 = add(io.a, UInt<1>("h1")) @[chapter3_模块与硬件类型.scala 398:53]
    node _reg5_T_3 = tail(_reg5_T_2, 1) @[chapter3_模块与硬件类型.scala 398:53]
    wire _reg5_WIRE : UInt<8>[2] @[chapter3_模块与硬件类型.scala 398:35]
    _reg5_WIRE[0] <= _reg5_T_1 @[chapter3_模块与硬件类型.scala 398:35]
    _reg5_WIRE[1] <= _reg5_T_3 @[chapter3_模块与硬件类型.scala 398:35]
    wire _reg5_WIRE_1 : UInt<8>[2] @[chapter3_模块与硬件类型.scala 398:68]
    _reg5_WIRE_1[0] <= UInt<8>("h0") @[chapter3_模块与硬件类型.scala 398:68]
    _reg5_WIRE_1[1] <= UInt<8>("h0") @[chapter3_模块与硬件类型.scala 398:68]
    reg reg5 : UInt<8>[2], clock with :
      reset => (reset, _reg5_WIRE_1) @[Reg.scala 35:20]
    when io.en : @[Reg.scala 36:18]
      reg5 <= _reg5_WIRE @[Reg.scala 36:22]
    node _reg6_T = sub(io.a, UInt<1>("h1")) @[chapter3_模块与硬件类型.scala 399:41]
    node _reg6_T_1 = tail(_reg6_T, 1) @[chapter3_模块与硬件类型.scala 399:41]
    node _reg6_T_2 = sub(io.a, UInt<1>("h1")) @[chapter3_模块与硬件类型.scala 399:53]
    node _reg6_T_3 = tail(_reg6_T_2, 1) @[chapter3_模块与硬件类型.scala 399:53]
    wire _reg6_WIRE : UInt<8>[2] @[chapter3_模块与硬件类型.scala 399:35]
    _reg6_WIRE[0] <= _reg6_T_1 @[chapter3_模块与硬件类型.scala 399:35]
    _reg6_WIRE[1] <= _reg6_T_3 @[chapter3_模块与硬件类型.scala 399:35]
    reg reg6 : UInt<8>[2], clock with :
      reset => (UInt<1>("h0"), reg6) @[Reg.scala 19:16]
    when io.en : @[Reg.scala 20:18]
      reg6 <= _reg6_WIRE @[Reg.scala 20:22]
    wire _reg7_WIRE : UInt<8>[2] @[chapter3_模块与硬件类型.scala 400:39]
    _reg7_WIRE[0] <= io.a @[chapter3_模块与硬件类型.scala 400:39]
    _reg7_WIRE[1] <= io.a @[chapter3_模块与硬件类型.scala 400:39]
    wire _reg7_WIRE_1 : UInt<8>[2] @[chapter3_模块与硬件类型.scala 400:63]
    _reg7_WIRE_1[0] <= UInt<8>("h0") @[chapter3_模块与硬件类型.scala 400:63]
    _reg7_WIRE_1[1] <= UInt<8>("h0") @[chapter3_模块与硬件类型.scala 400:63]
    reg reg7_r : UInt<8>[2], clock with :
      reset => (reset, _reg7_WIRE_1) @[Reg.scala 35:20]
    when io.en : @[Reg.scala 36:18]
      reg7_r <= _reg7_WIRE @[Reg.scala 36:22]
    reg reg7_r_1 : UInt<8>[2], clock with :
      reset => (reset, _reg7_WIRE_1) @[Reg.scala 35:20]
    when io.en : @[Reg.scala 36:18]
      reg7_r_1 <= reg7_r @[Reg.scala 36:22]
    reg reg7 : UInt<8>[2], clock with :
      reset => (reset, _reg7_WIRE_1) @[Reg.scala 35:20]
    when io.en : @[Reg.scala 36:18]
      reg7 <= reg7_r_1 @[Reg.scala 36:22]
    wire _reg8_WIRE : UInt<8>[2] @[chapter3_模块与硬件类型.scala 401:39]
    _reg8_WIRE[0] <= io.a @[chapter3_模块与硬件类型.scala 401:39]
    _reg8_WIRE[1] <= io.a @[chapter3_模块与硬件类型.scala 401:39]
    reg reg8_r : UInt<8>[2], clock with :
      reset => (UInt<1>("h0"), reg8_r) @[Reg.scala 19:16]
    when io.en : @[Reg.scala 20:18]
      reg8_r[0] <= _reg8_WIRE[0] @[Reg.scala 20:22]
      reg8_r[1] <= _reg8_WIRE[1] @[Reg.scala 20:22]
    reg reg8_r_1 : UInt<8>[2], clock with :
      reset => (UInt<1>("h0"), reg8_r_1) @[Reg.scala 19:16]
    when io.en : @[Reg.scala 20:18]
      reg8_r_1[0] <= reg8_r[0] @[Reg.scala 20:22]
      reg8_r_1[1] <= reg8_r[1] @[Reg.scala 20:22]
    reg reg8 : UInt<8>[2], clock with :
      reset => (UInt<1>("h0"), reg8) @[Reg.scala 19:16]
    when io.en : @[Reg.scala 20:18]
      reg8[0] <= reg8_r_1[0] @[Reg.scala 20:22]
      reg8[1] <= reg8_r_1[1] @[Reg.scala 20:22]
    node _reg2_0_T = andr(io.a) @[chapter3_模块与硬件类型.scala 403:23]
    reg2[0] <= _reg2_0_T @[chapter3_模块与硬件类型.scala 403:15]
    node _reg2_1_T = andr(io.a) @[chapter3_模块与硬件类型.scala 404:23]
    reg2[1] <= _reg2_1_T @[chapter3_模块与硬件类型.scala 404:15]
    node _reg3_0_T = orr(io.a) @[chapter3_模块与硬件类型.scala 405:23]
    reg3[0] <= _reg3_0_T @[chapter3_模块与硬件类型.scala 405:15]
    node _reg3_1_T = orr(io.a) @[chapter3_模块与硬件类型.scala 406:23]
    reg3[1] <= _reg3_1_T @[chapter3_模块与硬件类型.scala 406:15]
    node _T = bits(reset, 0, 0) @[chapter3_模块与硬件类型.scala 408:18]
    when _T : @[chapter3_模块与硬件类型.scala 408:26]
      reg4[0] <= UInt<1>("h0") @[chapter3_模块与硬件类型.scala 409:17]
      reg4[1] <= UInt<1>("h0") @[chapter3_模块与硬件类型.scala 410:17]
    else :
      reg4[0] <= UInt<1>("h1") @[chapter3_模块与硬件类型.scala 412:17]
      reg4[1] <= UInt<1>("h1") @[chapter3_模块与硬件类型.scala 413:17]
    node _io_c_T = bits(reg0[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:22]
    node _io_c_T_1 = bits(reg1[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:35]
    node _io_c_T_2 = and(_io_c_T, _io_c_T_1) @[chapter3_模块与硬件类型.scala 416:26]
    node _io_c_T_3 = bits(reg2[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:48]
    node _io_c_T_4 = and(_io_c_T_2, _io_c_T_3) @[chapter3_模块与硬件类型.scala 416:39]
    node _io_c_T_5 = bits(reg3[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:61]
    node _io_c_T_6 = and(_io_c_T_4, _io_c_T_5) @[chapter3_模块与硬件类型.scala 416:52]
    node _io_c_T_7 = bits(reg4[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:74]
    node _io_c_T_8 = and(_io_c_T_6, _io_c_T_7) @[chapter3_模块与硬件类型.scala 416:65]
    node _io_c_T_9 = bits(reg5[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:87]
    node _io_c_T_10 = and(_io_c_T_8, _io_c_T_9) @[chapter3_模块与硬件类型.scala 416:78]
    node _io_c_T_11 = bits(reg6[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:100]
    node _io_c_T_12 = and(_io_c_T_10, _io_c_T_11) @[chapter3_模块与硬件类型.scala 416:91]
    node _io_c_T_13 = bits(reg7[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:113]
    node _io_c_T_14 = and(_io_c_T_12, _io_c_T_13) @[chapter3_模块与硬件类型.scala 416:104]
    node _io_c_T_15 = bits(reg8[0], 0, 0) @[chapter3_模块与硬件类型.scala 416:126]
    node _io_c_T_16 = and(_io_c_T_14, _io_c_T_15) @[chapter3_模块与硬件类型.scala 416:117]
    node _io_c_T_17 = bits(reg0[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:22]
    node _io_c_T_18 = and(_io_c_T_16, _io_c_T_17) @[chapter3_模块与硬件类型.scala 416:130]
    node _io_c_T_19 = bits(reg1[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:35]
    node _io_c_T_20 = and(_io_c_T_18, _io_c_T_19) @[chapter3_模块与硬件类型.scala 417:26]
    node _io_c_T_21 = bits(reg2[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:48]
    node _io_c_T_22 = and(_io_c_T_20, _io_c_T_21) @[chapter3_模块与硬件类型.scala 417:39]
    node _io_c_T_23 = bits(reg3[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:61]
    node _io_c_T_24 = and(_io_c_T_22, _io_c_T_23) @[chapter3_模块与硬件类型.scala 417:52]
    node _io_c_T_25 = bits(reg4[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:74]
    node _io_c_T_26 = and(_io_c_T_24, _io_c_T_25) @[chapter3_模块与硬件类型.scala 417:65]
    node _io_c_T_27 = bits(reg5[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:87]
    node _io_c_T_28 = and(_io_c_T_26, _io_c_T_27) @[chapter3_模块与硬件类型.scala 417:78]
    node _io_c_T_29 = bits(reg6[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:100]
    node _io_c_T_30 = and(_io_c_T_28, _io_c_T_29) @[chapter3_模块与硬件类型.scala 417:91]
    node _io_c_T_31 = bits(reg7[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:113]
    node _io_c_T_32 = and(_io_c_T_30, _io_c_T_31) @[chapter3_模块与硬件类型.scala 417:104]
    node _io_c_T_33 = bits(reg8[1], 0, 0) @[chapter3_模块与硬件类型.scala 417:126]
    node _io_c_T_34 = and(_io_c_T_32, _io_c_T_33) @[chapter3_模块与硬件类型.scala 417:117]
    io.c <= _io_c_T_34 @[chapter3_模块与硬件类型.scala 416:12]

